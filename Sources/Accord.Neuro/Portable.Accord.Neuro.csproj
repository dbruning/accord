<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>10.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{46E4F987-424B-4BFD-A78F-03AE578A1AAA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Accord.Neuro</RootNamespace>
    <AssemblyName>Accord.Neuro</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <TargetFrameworkProfile>Profile111</TargetFrameworkProfile>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Release\Accord.Neuro.XML</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>Accord.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'UWP|AnyCPU'">
    <OutputPath>bin\UWP\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <DocumentationFile>bin\Release\Accord.Neuro.XML</DocumentationFile>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <!-- A reference to the entire .NET Framework is automatically included -->
    <Content Include="Properties\CustomDictionary.xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\Accord.Core\Properties\VersionInfo.cs">
      <Link>Properties\VersionInfo.cs</Link>
    </Compile>
    <Compile Include="Activation Functions\IdentityFunction.cs" />
    <Compile Include="Activation Functions\RectifiedLinearFunction.cs" />
    <Compile Include="Activation Functions\GaussianFunction.cs" />
    <Compile Include="Activation Functions\Base\IStochasticFunction.cs" />
    <Compile Include="Activation Functions\LinearFunction.cs" />
    <Compile Include="Activation Functions\BernoulliFunction.cs" />
    <Compile Include="AForge.Neuro\Activation Functions\BipolarSigmoidFunction.cs" />
    <Compile Include="AForge.Neuro\Activation Functions\IActivationFunction.cs" />
    <Compile Include="AForge.Neuro\Activation Functions\SigmoidFunction.cs" />
    <Compile Include="AForge.Neuro\Activation Functions\ThresholdFunction.cs" />
    <Compile Include="AForge.Neuro\Layers\ActivationLayer.cs" />
    <Compile Include="AForge.Neuro\Layers\DistanceLayer.cs" />
    <Compile Include="AForge.Neuro\Layers\Layer.cs" />
    <Compile Include="AForge.Neuro\Learning\BackPropagationLearning.cs" />
    <Compile Include="AForge.Neuro\Learning\DeltaRuleLearning.cs" />
    <Compile Include="AForge.Neuro\Learning\ElasticNetworkLearning.cs" />
    <Compile Include="AForge.Neuro\Learning\EvolutionaryFitness.cs" />
    <Compile Include="AForge.Neuro\Learning\EvolutionaryLearning.cs" />
    <Compile Include="AForge.Neuro\Learning\ISupervisedLearning.cs" />
    <Compile Include="AForge.Neuro\Learning\IUnsupervisedLearning.cs" />
    <Compile Include="AForge.Neuro\Learning\PerceptronLearning.cs" />
    <Compile Include="AForge.Neuro\Learning\ResilientBackPropagationLearning.cs" />
    <Compile Include="AForge.Neuro\Learning\SOMLearning.cs" />
    <Compile Include="AForge.Neuro\Networks\ActivationNetwork.cs" />
    <Compile Include="AForge.Neuro\Networks\DistanceNetwork.cs" />
    <Compile Include="AForge.Neuro\Networks\Network.cs" />
    <Compile Include="AForge.Neuro\Neurons\ActivationNeuron.cs" />
    <Compile Include="AForge.Neuro\Neurons\DistanceNeuron.cs" />
    <Compile Include="AForge.Neuro\Neurons\Neuron.cs" />
    <Compile Include="Initialization\GaussianWeights.cs" />
    <Compile Include="GlobalSuppressions.cs" />
    <Compile Include="Layers\StochasticLayer.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Learning\ContrastiveDivergenceLearning.cs" />
    <Compile Include="Learning\DeepNeuralNetworkLearning.cs" />
    <Compile Include="Learning\DeepBeliefNetworkLearning.cs" />
    <Compile Include="Learning\LevenbergMarquardtLearning.cs" />
    <Compile Include="Learning\ParallelResilientBackPropagationLearning.cs" />
    <Compile Include="Networks\DeepBeliefNetwork.cs" />
    <Compile Include="Networks\RestrictedBoltzmannMachine.cs" />
    <Compile Include="Neurons\StochasticNeuron.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Initialization\NguyenWidrow.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Visualization\ActivationMaximization.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Accord.snk" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Accord.Core\Portable.Accord.Core.csproj">
      <Project>{5e441557-080b-4664-a8eb-4185ddfd668d}</Project>
      <Name>Portable.Accord.Core</Name>
    </ProjectReference>
    <ProjectReference Include="..\Accord.Genetic\Portable.Accord.Genetic.csproj">
      <Project>{1c7f767b-1d8c-4ff4-8632-9ac1bef431b5}</Project>
      <Name>Portable.Accord.Genetic</Name>
    </ProjectReference>
    <ProjectReference Include="..\Accord.Math\Portable.Accord.Math.csproj">
      <Project>{a2e3375e-421d-4a53-9298-26180c915c97}</Project>
      <Name>Portable.Accord.Math</Name>
    </ProjectReference>
    <ProjectReference Include="..\Accord.Statistics\Portable.Accord.Statistics.csproj">
      <Project>{8dc51a9c-679f-433b-960e-df18fd27d04f}</Project>
      <Name>Portable.Accord.Statistics</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Content Include="AForge.Neuro\Images\sigmoid.bmp" />
    <Content Include="AForge.Neuro\Images\sigmoid_bipolar.bmp" />
    <Content Include="AForge.Neuro\Images\threshold.bmp" />
  </ItemGroup>
  <ItemGroup>
    <Reference Include="Shim, Version=2.1.0.0, Culture=neutral, PublicKeyToken=c55ec16d10c4b366, processorArchitecture=MSIL">
      <HintPath>..\packages\shim.2.1.0-pre\lib\portable-net45+netcore45+wpa81\Shim.dll</HintPath>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>